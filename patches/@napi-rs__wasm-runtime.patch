diff --git a/dist/runtime.js b/dist/runtime.js
index 636f7ad93bdbd9958807a62ca8805556feae14ba..502f40fc11d415a392e85e81dca9360910f57cdd 100644
--- a/dist/runtime.js
+++ b/dist/runtime.js
@@ -60,7 +60,7 @@ function deserizeErrorFromBuffer(sab) {
 /** @public */
 function isSharedArrayBuffer(value) {
     return ((typeof SharedArrayBuffer === 'function' && value instanceof SharedArrayBuffer) ||
-        (Object.prototype.toString.call(value.constructor) === '[object SharedArrayBuffer]'));
+        (Object.prototype.toString.call(value) === '[object SharedArrayBuffer]'));
 }
 /** @public */
 function isTrapError(e) {
@@ -3268,7 +3268,7 @@ function createNapiModule(options) {
                     }
                     return str;
                 }
-                return emnapiString.utf8Decoder.decode(((typeof SharedArrayBuffer === "function" && HEAPU8.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(HEAPU8.buffer.constructor) === "[object SharedArrayBuffer]")) ? HEAPU8.slice(ptr, end) : HEAPU8.subarray(ptr, end));
+                return emnapiString.utf8Decoder.decode(((typeof SharedArrayBuffer === "function" && HEAPU8.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(HEAPU8.buffer) === "[object SharedArrayBuffer]")) ? HEAPU8.slice(ptr, end) : HEAPU8.subarray(ptr, end));
             },
             stringToUTF8: function (str, outPtr, maxBytesToWrite) {
                 var HEAPU8 = new Uint8Array(wasmMemory.buffer);
@@ -3336,7 +3336,7 @@ function createNapiModule(options) {
                 }
                 // eslint-disable-next-line @typescript-eslint/no-unused-vars
                 var HEAPU8 = new Uint8Array(wasmMemory.buffer);
-                return emnapiString.utf16Decoder.decode(((typeof SharedArrayBuffer === "function" && HEAPU8.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(HEAPU8.buffer.constructor) === "[object SharedArrayBuffer]")) ? HEAPU8.slice(ptr, end) : HEAPU8.subarray(ptr, end));
+                return emnapiString.utf16Decoder.decode(((typeof SharedArrayBuffer === "function" && HEAPU8.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(HEAPU8.buffer) === "[object SharedArrayBuffer]")) ? HEAPU8.slice(ptr, end) : HEAPU8.subarray(ptr, end));
             },
             stringToUTF16: function (str, outPtr, maxBytesToWrite) {
                 if (maxBytesToWrite === undefined) {
@@ -9675,7 +9675,7 @@ function isPromiseLike(obj) {
     return !!(obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function');
 }
 function unsharedSlice(view, start, end) {
-    return ((typeof SharedArrayBuffer === 'function' && view.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(view.buffer.constructor) === '[object SharedArrayBuffer]'))
+    return ((typeof SharedArrayBuffer === 'function' && view.buffer instanceof SharedArrayBuffer) || (Object.prototype.toString.call(view.buffer) === '[object SharedArrayBuffer]'))
         ? view.slice(start, end)
         : view.subarray(start, end);
 }
